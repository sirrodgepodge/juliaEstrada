//// maybe use later
// .head {
//     margin-top: 24px;
//     font-size: 52px;
//     font-family: lato, sans-serif;
//     font-weight: 300;
//     text-align: center;
//     clear: both;
//     .sub-head {
//         font-size: 21px;
//         text-align: inherit;
//     }
//     .sub-sub-head {
//         font-size: 11px;
//         text-align: inherit;
//     }
// }

#photos {
  text-align: center;
  margin: 4% 5% 6%;
  padding: 4.5% 0 0;
  border-top: 1px solid #dfe7ed;
  z-index: 0;

  img.float-fold {
    visibility: none;
  }

  .float-fold {
    /////// sizing and positioning
    margin: 2% 0 0 2.52%;
    display: inline-block;
    text-align: center;
    &.vertical {
      height: 240px;
      width: 12.5%;
    }
    &.horizontal {
      height: 240px;
      width: 22%;
    }
    &:before {
      @include vend(box-shadow, 1px 2px 6px 0 rgba(0,0,0,0.3));
      content: "";
      position: absolute;
      display: block;
      height: 100%;
      width: 100%;
      opacity: 0;
    }

    /////// animation-related
    @include vendVal(background-image, linear-gradient(top, #000 30%, rgba(0,0,0,0) 48%));
    opacity: 0;
    background-size: 200%;
    background-repeat: no-repeat;

    .slice {
       @include vend(perspective, 3000px);
       -webkit-backface-visibility: hidden;
       width: 100%;
       height: 100%;
       background-repeat: no-repeat, no-repeat;
       background-blend-mode: overlay;
    }

    @for $i from 1 to 10 {
      & > .total-slices-#{$i} {
        height: calc(#{100%/$i + 0.10%} + 1px);
      }
      // adjust slice height based on total number of slices
      .total-slices-#{$i} {
        background-size: auto #{100% * $i};
      }
    }
  }

  &:hover {

    .float-fold {
      @include vend(transform, translate3d(0,0,0));
      opacity: 1;
      background-position: 0 -4%;

      &:before {
        opacity: 1;
      }

      .slice {
         &:not(.slice-1) {
           @include vend(transform, translate3d(0, calc(100% - 1px),0));
         }
      }

      @for $i from 1 to 10 {
        // delay folding for "peeling" effect
        .slice-#{$i} {
          @include vend(transition-delay, (#{$i*50ms}, 0s));
        }

        @for $j from 1 to ($i + 1) {
          // adjust background position based on slice index
          @if $j == 1 {
            .total-slices-#{$i}.slice-#{$j} {
              background-position: center 0%, center #{-100% + 100%/($i - 1)};
            }
          } @else {
            .total-slices-#{$i}.slice-#{$j} {
              background-position: center #{100%/($i - 1)*$j - 100%/($i - 1)}, center #{-100% + 100%/($i - 1)*$j - 100%/($i - 1)}; // scooch image down so that it's consistent with slice above/below
            }
          }
        }
      }
    }
  }
  &:not(:hover) {
    .float-fold {
      @include vend(transform, translate3d(5%, -3%, 0));
      background-position: -1% 0;

      // say how big you would like tilt to be
      $tilt-deg: 17deg;

      // adjust background position based on slice index
      $transform-pct: 91.3%;
      // $curr-tilt-deg: 0deg;

      @for $i from 2 to 10 {
        // adjust for total tilt
        // $curr-tilt-deg: $curr-tilt-deg + $tilt-deg;
        // $curr-tilt-cos: cos($curr-tilt-deg);

        // adjust background position based on slice index
        // $curr-transform-pct: $transform-pct * $curr-tilt-cos;
        // @debug $curr-transform-pct;

        @if $i > 1 {
          .slice-#{$i} {
            @include vend(transform, translate3d(0.5%, $transform-pct, 0) scale(1.004, .9) rotateX(#{$tilt-deg}) skewX(3deg));
          }
        }

        @for $j from 1 to ($i + 1) {
          // delay folding for "peeling" effect
          .total-slices-#{$i}.slice-#{$j} {
            @include vend(transition-delay, (#{($i - $j)*50ms}, 0s));
          }

          // adjust background position based on slice index
          @if $j == 1 {
            .total-slices-#{$i}.slice-#{$j} {
              background-position: center 0%, center 0%;
            }
          } @else {
            .total-slices-#{$i}.slice-#{$j} {
              background-position: center #{100%/($i - 1)*$j - 100%/($i - 1)}, center #{100%/($i - 1)*$j - 100%/($i - 1)}; // scooch image down so that it's consistent with slice above/below
            }
          }
        }
      }
    }
  }
  // for chaining transitions
  $close-gap: 0.45s;

  // needs to happen after/before the rest
  $opacity-duration: 0.5s;

  @for $i from 0 to 30 {
    &:hover {
      @if $i == 0 {
        .float-fold-0 {
          @include vend(transition, (transform 0.75s ease-in-out 0s, opacity 0.675s ease-in 0.075s, background-position 0.65s linear 0.1s));
          &:before {
            @include vend(transition, opacity $opacity-duration linear 0.75s);
          }
          .slice {
            @include vend(transition, (transform 0.55s linear 0s, background-position 0.65s linear 0.1s));
          }
        }
      } @else {
        .float-fold-#{$i} {
          @include vend(transition, (transform 0.75s ease-in-out #{$i * (0.75s - $close-gap) + 0s }, opacity 0.675s ease-in #{$i * (0.75s - $close-gap) + 0.075s}, background-position 0.65s linear #{$i * (0.75s - $close-gap) + 0.1s}));
          &:before {
            @include vend(transition, opacity $opacity-duration linear #{$i * (0.75s - $close-gap) + 0.75s});
          }
          .slice {
            @include vend(transition, (transform 0.55s linear #{$i * (0.75s - $close-gap) + 0s}, background-position 0.65s linear #{$i *(0.75s - $close-gap) + 0.1s}));
          }
        }
      }
    }
    @for $j from 0 to ($i + 1) {
      &:not(:hover) {
        .float-fold-#{$j}.float-fold-total-#{$i} {
          @include vend(transition, (transform 0.75s ease-in-out #{($i - $j) * (0.75s - $close-gap) + $opacity-duration}, opacity .675s ease-in #{($i - $j) * (0.75s - $close-gap) + $opacity-duration}, background-position 0.65s linear #{($i - $j) * (0.75s - $close-gap) + $opacity-duration}));
          &:before {
            @include vend(transition, opacity $opacity-duration linear #{($i - $j) * (0.75s - $close-gap) + 0s});
          }
          .slice {
            @include vend(transition, (transform 0.5s linear #{($i - $j)* (0.75s - $close-gap) + $opacity-duration}, background-position 0.65s linear #{($i - $j) * (0.75s - $close-gap) + $opacity-duration}));
          }
        }
      }
      .float-fold-#{$j}.float-fold-total-#{$i} {
        z-index: #{$i - $j};
      }
    }
  }
}
