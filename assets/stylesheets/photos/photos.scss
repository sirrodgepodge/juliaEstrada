// Coffee Purchasing

//// Coffee Header
.head {
    margin-top: 24px;
    font-size: 52px;
    font-family: lato, sans-serif;
    font-weight: 300;
    text-align: center;
    clear: both;
    .sub-head {
        font-size: 21px;
        text-align: inherit;
    }
    .sub-sub-head {
        font-size: 11px;
        text-align: inherit;
    }
}

.float-fold {
  @include vend(transition, (transform 0.75s ease-in-out 0s, opacity 0.65s ease-in 0.1s, background-position 0.65s linear 0.1s));
  @include vendVal(background-image, linear-gradient(top, #000 30%, #FFF 48%));
  // box-shadow: 0 0 4px rgba(0,0,0,0.14),0 4px 8px rgba(0,0,0,0.28), inset 0 0px 100px rgba(0,0,0,0.28);
  height: 480px;
  width: 720px;
  margin: 0 auto;
  background-size: 200%;
  background-repeat: no-repeat;
  background-position: 0 -4%;

  .slice {
     @include vend(transition, (transform 0.5s linear, background-position 0.65s linear 0.1s));
     @include vend(perspective, 3000px);
     -webkit-backface-visibility: hidden;
     width: 100%;
     height: 100%;
     background-repeat: no-repeat, no-repeat;
     background-blend-mode: overlay;

     // scoot all slices down their full height
     &:not(.slice-1) {
       @include vend(transform, translate3d(0, 100% ,0));
     }
  }

  @for $i from 1 to 10 {
    // adjust slice height based on total number of slices
    & > .total-slices-#{$i} {
      height: #{100%/$i + 0.10%};
    }

    .total-slices-#{$i} {
      background-size: auto #{100% * $i};
    }

    // delay folding for "peeling" effect
    .slice-#{$i} {
      @include vend(transition-delay, (#{$i*50ms}, 0s));
    }

    @for $j from 1 to ($i + 1) {
      // adjust background position based on slice index
      @if $j == 1 {
        .total-slices-#{$i}.slice-#{$j} {
          background-position: center 0%, center #{-100% + 100%/($i - 1)};
        }
      } @else {
        .total-slices-#{$i}.slice-#{$j} {
          background-position: center #{100%/($i - 1)*$j - 100%/($i - 1)}, center #{-100% + 100%/($i - 1)*$j - 100%/($i - 1)}; // scooch image down so that it's consistent with slice above/below
        }
      }
    }
  }



  &:hover {
    @include vend(transition, (transform 0.75s ease-in-out 0s, opacity .65s ease-in 0s, background-position 0.65s linear 0s));
    @include vend(transform, translate(5%, -3%));
    opacity: 0.3;
    background-position: -1% 0;

    .slice {
       @include vend(transition, (transform 0.5s linear, background-position 0.65s linear 0s));
    }


    // say how big you would like tilt to be
    $tilt-deg: 17deg;

    // adjust background position based on slice index
    $transform-pct: 91.3%;
    $curr-tilt-deg: 0deg;

    @for $i from 2 to 10 {
      // adjust for total tilt
      $curr-tilt-deg: $curr-tilt-deg + $tilt-deg;
      $curr-tilt-cos: cos($curr-tilt-deg);

      // adjust background position based on slice index
      $curr-transform-pct: $transform-pct * $curr-tilt-cos;
      @debug $curr-transform-pct;

      @if $i > 1 {
        .slice-#{$i} {
          @include vend(transform, translate3d(0.3%, $transform-pct, 0) scale(1.004, .9) rotateX(#{$tilt-deg}) skewX(3deg));
        }
      }

      @for $j from 1 to ($i + 1) {
        // delay folding for "peeling" effect
        .total-slices-#{$i}.slice-#{$j} {
          @include vend(transition-delay, (#{($i - $j)*50ms}, 0s));
        }

        // adjust background position based on slice index
        @if $j == 1 {
          .total-slices-#{$i}.slice-#{$j} {
            background-position: center 0%, center 0%;
          }
        } @else {
          .total-slices-#{$i}.slice-#{$j} {
            background-position: center #{100%/($i - 1)*$j - 100%/($i - 1)}, center #{100%/($i - 1)*$j - 100%/($i - 1)}; // scooch image down so that it's consistent with slice above/below
          }
        }
      }
    }
  }
}
