// For contact section

// For phone view
$phone-adjust-factor: 0.6658;

//// Height + width of contact image
////// This value drives all other calculations ///////
$contact-side: 36.8vh;
$phone-contact-side: $contact-side * $phone-adjust-factor;
$contact-margin-top: 18vh;
$phone-contact-margin-top: $contact-margin-top * $phone-adjust-factor;


//// Border width & margin
$contact-border-width: $contact-side/25;
$contact-margin: $contact-margin-top 0 $contact-border-width/.4;
$phone-contact-margin: $phone-contact-margin-top 0 $contact-border-width/.875*$phone-adjust-factor;

//// Centering images behind contact and hanfling pop-out
@mixin contactImgInit($name, $size-pct, $bg-color, $transition-time, $side, $dir-pct, $perp-pct) {
  //// For pushing images out
  $contact-side-strip: stripUnits($contact-side);
  $contact-border-width-strip: stripUnits($contact-border-width);
  $denom: 2*$contact-border-width-strip/$contact-side-strip;
  $img-size: $size-pct*$contact-side;
  $phone-img-size: $size-pct*$contact-side*$phone-adjust-factor;

  .#{$name} {
    @include vend(transition, ($transition-time ease-in-out));
    width: $img-size;
    height: $img-size;
    left: calc(50vw - #{$img-size/2});
    top: $contact-margin-top + $contact-side/2 - $img-size/2;
    font-size: $img-size/1.5;
    background-color: $bg-color;
    @media (max-width: $phone-max) and (orientation:portrait) {
        width: $phone-img-size;
        height: $phone-img-size;
        font-size: $phone-img-size/1.5;
        left: calc(50vw - #{$phone-img-size/2});
        top: $phone-contact-margin-top + $phone-contact-side/2 - $phone-img-size/2;
    }
  }
  .poppin .#{$name} {
    $adjust: if($side == bottom or $side == right, 1, -1);

    $isHoriz: $side == left or $side == right;

    $perp-adjust: if($isHoriz, -1, 1);
    $perp-side: if($isHoriz, Y, X);
    $side: if($isHoriz, X, Y);

    $perp-side-transform: unquote("translate#{$perp-side}(#{($contact-side + $img-size)/2*$perp-pct*$perp-adjust})"); //for adjusting vertically along side
    $phone-perp-side-transform: unquote("translate#{$perp-side}(#{($contact-side + $img-size)/2*$perp-pct*$perp-adjust*$phone-adjust-factor})");

    //makes it hug the rounded part... so ridiculous lmao
    $perp-pct: abs($perp-pct);
    $push: stripUnits(($contact-side + $img-size)/2*$adjust);
    $phone-push: $push*$phone-adjust-factor;
    @if $perp-pct > (1 - $denom) {
        $perp-pct-passed: ($perp-pct - 1)/$denom + 1;
        $push: $push + $perp-adjust*($contact-border-width-strip - sqrt((1-$perp-pct-passed)*(1-$perp-pct-passed)*$contact-border-width-strip*$contact-border-width-strip));
        $phone-push: $phone-push*$phone-adjust-factor + $perp-adjust*($contact-border-width-strip*$phone-adjust-factor - sqrt((1-$perp-pct-passed)*(1-$perp-pct-passed)*$contact-border-width-strip*$contact-border-width-strip*$phone-adjust-factor));
    }
    $push: $push*$dir-pct;
    $phone-push: $phone-push*$dir-pct;
    $side-transform: unquote("translate#{$side}(#{$push}vh)");
    $phone-side-transform: unquote("translate#{$side}(#{$phone-push}vh)");


    //Apply result with transform, regular and phone
    @include vend(transform, ($side-transform $perp-side-transform translateZ(0)));
    @media (max-width: $phone-max) and (orientation:portrait) {
        @include vend(transform, ($phone-side-transform $phone-perp-side-transform translateZ(0)));
    }

  	@media (max-width: $tablet-max) {
      a {
    		pointer-events: none;
    		cursor: default;
      }
  	}
  }
}
//// Refactor for transform3d

// Contact section
#contact {
    clear: both;
    text-align: center;
    display: block;
    .contact-head {
        @include vend(border-radius, $contact-border-width/4);
        box-shadow: 0 0 0 $contact-border-width $theme-color;
        display: inline-block;
        width: $contact-side;
        height: $contact-side;
        margin: $contact-margin;
        padding: 0;
        z-index: 1;
        @media (max-width: $phone-max) and (orientation:portrait) {
            & {
                @include vend(border-radius, #{$contact-border-width/4 * $phone-adjust-factor});
                box-shadow: 0 0 0 #{$contact-border-width * $phone-adjust-factor} $theme-color;
                width: $contact-side * $phone-adjust-factor;
                height: $contact-side * $phone-adjust-factor;
                margin: $phone-contact-margin;
            }
        }
    }
    .contact-sub {
        @include vend(border-radius, $contact-border-width/4);
        @include vend(transition, .6s ease-in-out);
        display: block;
        margin: 0 auto 11.5vh;
        border-top: $theme-color solid $contact-border-width/2;
        // border-bottom: $theme-color solid $contact-border-width/6.25;
        border-left: $theme-color solid $contact-border-width/1.75;
        border-right: $theme-color solid $contact-border-width/1.75;
        background-color: $theme-color;
        text-align: center;
        font-size: $contact-side/12;
        color: $white;

        .contact-sub-inside {
            @include vend(transition, .5s);
            display: inline !important;
            white-space: nowrap;
            opacity: 0;
        }

        &:hover {
            @include vend(transition, .375s ease-in-out);
            text-shadow: 0 0 8px $white;
        }
    }
    .contact-img {
        @include vend(border-radius, 50%);
        z-index: 0;
        position: absolute;
        &.address {
            letter-spacing: -.145em;
            line-height: 1.5;
        }
        &.instagram {
            letter-spacing: -.145em;
            line-height: 1.5;
        }
        &:hover {
            text-shadow: 0 0 25px #fff;
        }
    }
    .paper-resume {
      display: none;
      margin: 0 auto 50px;
    }
    @media (max-width: $phone-max) and (orientation:portrait) {
        .contact-sub {
            @include vend(border-radius, $contact-border-width/2 * $phone-adjust-factor);
            border-top: $theme-color solid $contact-border-width/2 * $phone-adjust-factor;
            // border-bottom: $theme-color solid $contact-border-width/6.25 * $phone-adjust-factor;
            border-left: $theme-color solid $contact-border-width/1.75 * $phone-adjust-factor;
            border-right: $theme-color solid $contact-border-width/1.75 * $phone-adjust-factor;
            font-size: $contact-side/12 * $phone-adjust-factor * 1.25;
            margin-bottom: 30px;
        }
        .paper-resume {
          display: block;
        }
    }
}

@include contactImgInit(facebook, .6666666, theme-color-fade(0.13), .55s, left, .9, -.27);
@include contactImgInit(phone, .4166666, theme-color-fade(0.23), .6s, left, .92, .725);
@include contactImgInit(email, .3448275, theme-color-fade(0.34), .65s, top, .985, -.1);
@include contactImgInit(address, .37037037, theme-color-fade(0.44), .5s, right, .825, .865);
@include contactImgInit(instagram, .5, theme-color-fade(0.61), .45s, right, .915, .05);
