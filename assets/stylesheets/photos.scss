// Coffee Purchasing

//// Coffee Header
.head {
    margin-top: 24px;
    font-size: 52px;
    font-family: lato, sans-serif;
    font-weight: 300;
    text-align: center;
    clear: both;
    .sub-head {
        font-size: 21px;
        text-align: inherit;
    }
    .sub-sub-head {
        font-size: 11px;
        text-align: inherit;
    }
}

.float-fold {
  @include vend(transition, (transform .5s ease-in-out, opacity .3s ease-in 0s));
  @include vendVal(background, linear-gradient(top, #000 50%, #FFF 100%));
  height: 480px;
  width: 720px;
  margin: 0 auto;

  .slice {
	   // @include vend(transform, translate3d(0, $tilt-amount ,0));
     @include vend(transform-style, preserve-3d);
     width: 100%;
     height: 100%;
     background-position: center 0;
     background-repeat: no-repeat;

     // scoot all slices down their full height
     &:not(.slice-1) {
       @include vend(transform, translate3d(0, calc(100% - 1px),0));
     }

     .overlay {
        display: block;
        height: 100%;
    	width: 100%;
    	opacity: 0;
    	position: absolute;
     }
  }

  @for $i from 1 to 10 {
    // adjust slice height based on total number of slices
    & > .total-slices-#{$i} {
      height: #{100%/$i};
    }

    .total-slices-#{$i} {
      background-size: auto #{100% * $i};
    }

    @for $j from 1 to ($i + 1) {
      // delay folding for "peeling" effect
      .total-slices-#{$i}.slice-#{$j} {
        @include vend(transition-delay, #{($i - $j)*50ms});
        .overlay {
          @include vend(transition, opacity #{($i - $j)*50ms} ease-in-out);
        }
      }

      // adjust background position based on slice index
      @if $j > 1 {
        .total-slices-#{$i}.slice-#{$j} {
          background-position: center calc(#{100%/($i - 1)*$j - 100%/($i - 1)} + 1px); // scooch image down so that it's consistent with slice above/below
        }
      }
      @if $j == $i {
        .total-slices-#{$i}.slice-#{$j} > .overlay {
          @include vendVal(background, linear-gradient(bottom, rgba(0,0,0,0.4) 0%,rgba(0,0,0,0.2) 100%));
        }
      }
      @if $j == ($i - 1) {
        .total-slices-#{$i}.slice-#{$j} > .overlay {
          @include vendVal(background, linear-gradient(bottom, rgba(0,0,0,0.2) 0%,rgba(0,0,0,0.075) 100%));
        }
      }
      @if $j == ($i - 2) {
        .total-slices-#{$i}.slice-#{$j} > .overlay {
          @include vendVal(background, linear-gradient(bottom, rgba(0,0,0,0.075) 0%,rgba(0,0,0,0.025) 100%));
        }
      }
      @if $j == ($i - 3) {
        .total-slices-#{$i}.slice-#{$j} > .overlay {
          @include vendVal(background, linear-gradient(bottom, rgba(0,0,0,0.025) 0%,rgba(0,0,0,0) 100%));
        }
      }
    }
  }

  $tilt-deg: 10;
  &:hover {
    @include vend(transition, (transform .5s ease-in-out, opacity .45s ease-in 0s));
    opacity: 0;

    .overlay {
      opacity: 1;
    }

    @for $i from 1 to 10 {
      @for $j from 1 to ($i + 1) {
        // adjust background position based on slice index
        @if $j > 1 {
          .total-slices-#{$i}.slice-#{$j} {
            @include vend(transform, translate3d(0, #{100% - ($tilt-deg/180 * $j * .485) * 100%}, 0) rotateX(#{$tilt-deg}deg));
          }
        }
      }
    }
  }
}
